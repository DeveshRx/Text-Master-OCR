plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.appdistribution'
    id 'kotlin-android'

}


def AppVersionCode = 8
def AppVersionName = "1.0.0.8"

android {
    compileSdk project.CompileSDK
    signingConfigs {
        release {
            keyAlias project.keySignAlias
            keyPassword project.keySignAliasPassword
            storeFile file(project.keySignFile)
            storePassword project.keySignPassword


        }
    }

    defaultConfig {
        applicationId "devesh.app.ocr"
        minSdk 21
        targetSdk project.CompileSDK
        versionCode AppVersionCode
        versionName AppVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }

        resValue "string", "app_version_code", "\"" + AppVersionCode + "\""

    }

    buildTypes {
        debug {
            resValue "string", "app_version_name", "\"" + AppVersionName + "\""

            resValue "bool", "FirebaseAnalytics_Enabled", "false"
            resValue "bool", "FirebaseAnalytics_Deactivated", "true"
            // SPEEDUP BUILD
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false

        }
        internal {
            resValue "string", "app_version_name", "\"" + AppVersionName + " Internal" + "\""

            // initWith debug
            resValue "bool", "FirebaseAnalytics_Enabled", "false"
            resValue "bool", "FirebaseAnalytics_Deactivated", "true"

            versionNameSuffix ' internal'
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseAppDistribution {
                releaseNotes = "Version: $AppVersionName (internal)\nBuild no: $AppVersionCode"
                groups = "testers"
            }
        }
        release {
            resValue "string", "app_version_name", "\"" + AppVersionName + "\""

            resValue "bool", "FirebaseAnalytics_Enabled", "true"
            resValue "bool", "FirebaseAnalytics_Deactivated", "false"

            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
         //   debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseAppDistribution {
                releaseNotes = "PlayStore \nVersion: $AppVersionName \nBuild no: $AppVersionCode"
                groups = "testers"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    // SPEED UP ANDROID STUDIO !
    dexOptions {
        incremental true
    }

 lint {
                        baseline = file("lint-baseline.xml")
                    }
    namespace 'devesh.app.ocr'
}

dependencies {

    implementation "androidx.appcompat:appcompat:$project.appcompat_version"
    implementation "com.google.android.material:material:$project.material_version"
    implementation "androidx.constraintlayout:constraintlayout:$project.constraintlayout_version"
    implementation "androidx.navigation:navigation-fragment:$project.navigation_fragment_version"
    implementation "androidx.navigation:navigation-ui:$project.navigation_ui_version"
    implementation project(path: ':mlkit-ocr')
    implementation "androidx.preference:preference:$project.preference_version"
    implementation project(path: ':database')
    implementation project(path: ':common')
    implementation project(path: ':user-guide')
    implementation project(path: ':MoreApps')
    implementation project(path: ':cropper')
    implementation project(path: ':billing')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

// Firebase
    implementation platform("com.google.firebase:firebase-bom:$project.firebaseBOM_version")
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation "com.google.android.gms:play-services-ads:$project.PlayServicesAds_version"
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation 'com.google.firebase:firebase-config'


    implementation "androidx.camera:camera-core:$project.camerax_version"
    implementation "androidx.camera:camera-camera2:$project.camerax_version"
    implementation "androidx.camera:camera-lifecycle:$project.camerax_version"
    implementation "androidx.camera:camera-video:$project.camerax_version"

    implementation "androidx.camera:camera-view:$project.camerax_version"
    implementation "androidx.camera:camera-extensions:$project.camerax_version"

    //implementation "com.google.android.gms:play-services-mlkit-text-recognition:$project.MlkitTextRecognition_version"
// To recognize Latin script
    implementation "com.google.mlkit:text-recognition:$project.MlkitTextRecognition_version"

    // To recognize Chinese script
    implementation "com.google.mlkit:text-recognition-chinese:$project.MlkitTextRecognition_version"

    // To recognize Devanagari script
    implementation "com.google.mlkit:text-recognition-devanagari:$project.MlkitTextRecognition_version"

    // To recognize Japanese script
    implementation "com.google.mlkit:text-recognition-japanese:$project.MlkitTextRecognition_version"

    // To recognize Korean script
    implementation "com.google.mlkit:text-recognition-korean:$project.MlkitTextRecognition_version"


    implementation "androidx.room:room-runtime:$project.room_version"
    annotationProcessor "androidx.room:room-compiler:$project.room_version"

    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$project.room_version"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$project.room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$project.room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$project.room_version"

    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$project.room_version"


    //Google Play Core
    implementation "com.google.android.play:core:$project.play_core_version"

    //MS App Center
    implementation "com.microsoft.appcenter:appcenter-analytics:$project.MSAppCenter_version"
    implementation "com.microsoft.appcenter:appcenter-crashes:$project.MSAppCenter_version"


    implementation "com.google.code.gson:gson:$project.gson_version"

    implementation "com.github.bumptech.glide:glide:$project.glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$project.glide_version"

    // Image Cropper
    // implementation 'com.theartofdev.edmodo:android-image-cropper:+'

  //  def billing_version = "5.2.0"
    def billing_version = "6.0.1"
    implementation "com.android.billingclient:billing:$project.billing_version"
    implementation "com.google.android.gms:play-services-base:$project.play_services_base"

    implementation 'com.google.android.ump:user-messaging-platform:2.1.0'

// Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.10"

}